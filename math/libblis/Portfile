# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0
PortGroup           github 1.0
PortGroup user 1.0

set repo.author     gaming-hacker
set repo.name       libblis
set repo.date       20180217
set repo.hash       92547f765ed6abe502a7559766f1532d4e8d0588
set repo.tag        master

name                libblis
version             2.0.2
revision            0
epoch               1
categories          math

github.setup        ${repo.author} ${repo.name} ${repo.hash}
version             ${repo.date}-${revision}
fetch.type          git

github.author       ${repo.author}
github.tag_prefix   ${repo.tag}
maintainers         github:${github.author}

description         BLAS-like Library Instantiation Software Framework

long_description    BLIS is a portable software framework for instantiating\
                    high-performance BLAS-like dense linear algebra libraries. \
                    The framework was designed to isolate essential kernels of \
                    computation that, when optimized, immediately enable optimized \
                    implementations of most of its commonly used and \
                    computationally intensive operations. BLIS is written in \
                    ISO C99 and available under a new/modified/3-clause BSD license.\
                    While BLIS exports a new BLAS-like API, it also includes a BLAS \
                    compatibility layer which gives application developers access to \
                    BLIS implementations via traditional BLAS routine calls.

homepage            https://github.org/${name}/

platforms           darwin

supported_archs     x86_64

license             GPL

distname            ${name}

use_configure       yes

use_autoreconf     no

configure.args  --quiet \
                --enable-shared \
                --enable-static \
                --enable-cblas \
                --enable-blas \
                --enable-verbose-make \
                --enable-threading=pthreads \
                CC=clang-mp-${user.ver.clang}


default_variants    +haswell

variant haswell description {fourth-generation core successor to the Ivy Bridge} {
    configure.args-append   haswell
}

variant sandybridge description {Nehalem microarchitecture} {
    configure.args-append   sandybridge
}

variant dunnington description {Xeon chipsets} {
    configure.args-append   dunnington
}

variant reference description {reference build} {
    configure.args-append   reference
}

livecheck.type      none
