# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

name                zimg
version             2.6.1
categories          multimedia

maintainers         nomaintainer

description         Colorspaces: SMPTE-C (NTSC), Rec.709, Rec.2020

long_description    The "z" library implements the commonly required image processing \
                    basics of scaling, colorspace conversion, and depth conversion. \
                    A simple API enables conversion between any supported formats to \
                    operate with minimal knowledge from the programmer. \
                    \
                    All \
                    routines were designed from the ground-up with correctness, \
                    flexibility, and thread-safety as first priorities. Allocation, \
                    buffering, and I/O are cleanly separated from processing, \
                    allowing the programmer to adapt "z" to many scenarios

homepage            https://github.com/sekrit-twc/zimg

platforms           darwin

use_parallel_build          yes

supported_archs     x86_64

license             Do What The F*ck You Want To Public License

github.setup        sekrit-twc zimg 6cc9e5683e2b840b13e614eaae3dc1d3520dbf1c
version             20180213
fetch.type          git

fetch.type          git
git.url             https://github.com/sekrit-twc/zimg.git
git.branch          origin/master

github.author       sekrit-twc
github.homepage     https://github.com/${github.author}/${name}

# depends_lib
use_configure       yes
set ver_clang "6.0"
set ver_intel "2018.1.126"
set FLAGS "-O3 -pipe -m64 -arch x86_64 -fopenmp -march=native -mtune=native -mmacosx-version-min=10.12 -fomit-frame-pointer -fno-common -mavx -mavx2 -mfma -mfpmath=sse -msse2 -msse3 -msse4.1 -msse4.2"

set WNO "-Wno-unknown-warning-option -Wno-unused-function -Wno-unused-variable -Wno-unused-command-line-argument -Wno-ignored-optimization-argument"

set MACROS "-DLEVEL1_DCACHE_LINESIZE=64 -DLEVEL1_DCACHE_SIZE=32 -DLEVEL2_DCACHE_SIZE=256 -DHASWELL -DL1_DATA_SIZE=32768 -DL1_DATA_LINESIZE=64 -DL2_SIZE=262144 -DL2_LINESIZE=64 -DDTB_DEFAULT_ENTRIES=64 -DDTB_SIZE=4096 -DHAVE_AVX -DHAVE_AVX2 -DHAVE_CFLUSH -DHAVE_CMOV -DHAVE_FMA3 -DHAVE_MMX -DHAVE_PSE -DHAVE_SSE -DHAVE_SSE2 -DHAVE_SSE3 -DHAVE_SSSE3 -DSSE4_1 -DHAVE_SSE4_2 -DHAVE_VFPV3 -DHAVE_OPENCL -D_REENTRANT -D_THREAD_SAFE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -DHAVE_NASM -DNDEBUG -DPIC -DUSE_PTHREAD"

configure.cc        ${prefix}/bin/clang-mp-${ver_clang}

configure.cflags    $FLAGS $WNO  $MACROS -std=c11 -stdlib=libc++

configure.cxx       ${prefix}/bin/clang++-mp-${ver_clang}

configure.cxxflags  $FLAGS $WNO  $MACROS -std=c++14 -stdlib=libc++

configure.cpp       ${prefix}/bin/clang-cpp-mp-${ver_clang}

set INTEL "/opt/intel/compilers_and_libraries_${ver_intel}/mac"

configure.ldflags -L$INTEL/tbb/lib -L$INTEL/mkl/lib -L$INTEL/ipp/lib -L$INTEL/daal/lib -L/opt/local/libexec/llvm-${ver_clang}/lib -lc++ -lc++abi

configure.cppflags -I$INTEL/tbb/include -I$INTEL/mkl/include -I$INTEL/ipp/include -I$INTEL/daal/include -I/opt/local/libexec/llvm-${ver_clang}/include/c++/v1

configure.compiler  macports-clang-${ver_clang}

configure.ccache            no

use_autoreconf              yes
autoreconf.args             -fvi

configure.args              --disable-option-checking \
                            --enable-shared \
                            --disable-static \
                            --disable-ltdl-install \
                            --enable-silent-rules \
                            --enable-fast-install \
                            --disable-dependency-tracking \
                            --enable-libtool-lock \
                            --disable-debug \
                            --enable-simd

livecheck.type      none
