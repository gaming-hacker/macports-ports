# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

# Keep in sync with Gate (and/or implement a PortGroup)

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           select 1.0

name                geant4
version             4.10.4
categories          science
maintainers         {mojca @mojca} openmaintainer
license             Restrictive/Distributable
#                   http://geant4.web.cern.ch/geant4/license/LICENSE.html
description         Geant4 is a toolkit for the simulation of the passage of particles through matter.
long_description    Geant4 is a toolkit for the simulation of the passage of particles through matter. \
                    Its areas of application include high energy, nuclear and accelerator physics, as well as studies in medical and space science. \
                    The two main reference papers for Geant4 are published in Nuclear Instruments and Methods in Physics Research A 506 (2003) 250-303, \
                    and IEEE Transactions on Nuclear Science 53 No. 1 (2006) 270-278.
homepage            http://geant4.web.cern.ch/
platforms           darwin

master_sites        http://geant4.cern.ch/support/source/

set geant.url_new   https://geant4.web.cern.ch/support/download
set geant.url_old   https://geant4.web.cern.ch/support/download_archive

# meaning of the fields:
# - version
# - revision (used internally in MacPorts to force updates)
# - revision of data files (used internally in MacPorts to force updates)
# - patchlevel (also used in directory names)
# - version string (used for fetching the source)
#
# if we start distributing betas, epoch will have to be added for the transition from version 4.x.y.b01 to 4.x.y
set geant.versions_info [list \
    10.4  1  0  0  4.10.04      740375629e95747af7c845bc876701bf989354b1  f6d883132f110eb036c69da2b21df51f13c585dc7b99d4211ddd32f4ccee1670  34884065  ${geant.url_new} \
]

#   NAME               VERS  FILENAME             ENVVAR             md5                               rmd160                                    sha256
set geant.data_versions_10.4 {
    G4NDL              4.5   G4NDL                G4NEUTRONHPDATA    fd29c45fe2de432f1f67232707b654c0  5c03cd810e590e48bae8b52e44e0ba218fcfc5ec  cba928a520a788f2bc8229c7ef57f83d0934bb0c6a18c31ef05ef4865edcdf8e
    G4EMLOW            7.3   G4EMLOW              G4LEDATA           0446e7f53af993343956e5d3900157b8  fa735d9aaa7bae220dde0e18bb12d4e00ff8e049  583aa7f34f67b09db7d566f904c54b21e95a9ac05b60e2bfb794efb569dba14e
    PhotonEvaporation  5.2   G4PhotonEvaporation  G4LEVELGAMMADATA   37c5dea9614a07885050350d071a6973  7fedda9c95d14695ee9032afe76a14eed812cf88  83607f8d36827b2a7fca19c9c336caffbebf61a359d0ef7cee44a8bcf3fc2d1f
    RadioactiveDecay   5.2   G4RadioactiveDecay   G4RADIOACTIVEDATA  e035ed77e12be3a69c2d32806d1b5cde  dae8ccf6fc22ca0a717d196e125a97b48a64ec40  99c038d89d70281316be15c3c98a66c5d0ca01ef575127b6a094063003e2af5d
    G4NEUTRONXS        1.4   G4NEUTRONXS          G4NEUTRONXSDATA    665a12771267e3b31a08c622ba1238a7  41278460f9c4a720f2b9e47dee878b9ec289ebd1  57b38868d7eb060ddd65b26283402d4f161db76ed2169437c266105cca73a8fd
    G4PII              1.3   G4PII                G4PIIDATA          05f2471dbcdf1a2b17cbff84e8e83b37  313a2615903b0682b8aabc344bedde82c345704b  6225ad902675f4381c98c6ba25fc5a06ce87549aa979634d3d03491d6616e926
    RealSurface        2.1   G4RealSurface        G4REALSURFACEDATA  f1c72b31d45905f011e2ec4ea96612f4  b0cc8a20405dd0ff5e79391c12f77059a3908264  2a287adbda1c0292571edeae2082a65b7f7bd6cf2bf088432d1d6f889426dcf3
    G4SAIDDATA         1.1   G4SAIDDATA           G4SAIDXSDATA       d88a31218fdf28455e5c5a3609f7216f  7f0c75c86eea3d227379d3dfe77e4600752f99a2  a38cd9a83db62311922850fe609ecd250d36adf264a88e88c82ba82b7da0ed7f
    G4ABLA             3.1   G4ABLA               G4ABLADATA         180f1f5d937733b207f8d5677f76296e  b74be69697167ce71fd5c0ee3466b83d8679c758  7698b052b58bf1b9886beacdbd6af607adc1e099fc730ab6b21cf7f090c027ed
    G4ENSDFSTATE       2.2   G4ENSDFSTATE         G4ENSDFSTATEDATA   495439cf600225753d7bd99825e5c6bc  c8ed1ba2796d85520f100de21df6a929d70fb534  dd7e27ef62070734a4a709601f5b3bada6641b111eb7069344e4f99a01d6e0a6
    G4TENDL            1.3.2 G4TENDL              G4TENDL            209f878b777a36842d20a47ca53c6f93  7dd16c003c8bcafe64753dc25a431c17912a183d  3b2987c6e3bee74197e3bd39e25e1cc756bb866c26d21a70f647959fc7afb849
}

foreach {geant.version geant.revision geant.datarevision geant.patchlevel geant.version_full geant.rmd160 geant.sha256 geant.size geant.livecheck_url} ${geant.versions_info} {

    # this variable could/should come from a PortGroup one day
    # note that gmk files go to share/Geant4/Geant4-${geant.version}.${geant.patchlevel}
    set geant.datadir_x ${prefix}/share/Geant4/Data/Geant4.${geant.version}
    # or perhaps share/Geant4/Geant${geant.version_simple}/Data

    subport ${name}.${geant.version}-data {
        set                 geant.version_simple 4.${geant.version}
        set                 geant.datadir ${geant.datadir_x}
        version             ${geant.version_simple}
        revision            ${geant.datarevision}
        supported_archs     noarch
        description         Data files for Geant${version}
        long_description    ${description}

        # TODO: use an array (hash) to implement this without if-else
        if {${geant.version} == "10.4" } {
            set geant.data_versions     ${geant.data_versions_10.4}
        }
        if {${geant.version} == "10.3" } {
            set geant.data_versions     ${geant.data_versions_10.3}
        }
        if {${geant.version} == "10.2" } {
            set geant.data_versions     ${geant.data_versions_10.2}
        }
        if {${geant.version} == "10.1" } {
            set geant.data_versions     ${geant.data_versions_10.1}
        }
        if {${geant.version} == "10.0" } {
            set geant.data_versions     ${geant.data_versions_10.0}
        }
        if {${geant.version} == "9.6" } {
            set geant.data_versions     ${geant.data_versions_9.6}
        }
        # make the distfiles list empty
        distfiles
        foreach {data.name data.version data.filename data.envvariable data.md5 data.rmd160 data.sha256} ${geant.data_versions} {
            set filename ${data.filename}.${data.version}${extract.suffix}
            # http://bugzilla-geant4.kek.jp/show_bug.cgi?id=1849
            # https://trac.macports.org/ticket/51603
            # if {${geant.version} == "10.2" } {
            #     if {${data.filename} == "G4RadioactiveDecay"} {
            #         set filename ${data.filename}.4.4${extract.suffix}
            #     } elseif {${data.filename} == "G4ENSDFSTATE"} {
            #         set filename ${data.filename}.1.2.2${extract.suffix}
            #     }
            # }
            distfiles-append ${filename}
            checksums-append ${filename} md5 ${data.md5} rmd160 ${data.rmd160} sha256 ${data.sha256}
        }
        post-extract {
            # only necessary for G4EMLOW 6.32
            # but G4NEUTRONXS 1.1, 1.2, 1.3 and PhotonEvaporation 2.2 also have some weird permissions
            system "find ${workpath} -type f -exec chmod 644 {} \\;"
            # http://bugzilla-geant4.kek.jp/show_bug.cgi?id=1849
            # https://trac.macports.org/ticket/51603
            # if {${geant.version} == "10.2" } {
            #     move ${workpath}/RadioactiveDecay4.4 ${workpath}/RadioactiveDecay4.3.1
            # }
        }
        use_configure no
        build {}

        destroot {
            xinstall -m 755 -d ${destroot}${geant.datadir}
            # create a script to initialize environmental variables for locating the data files & move data files to destination
            #
            # TODO: maybe a better name or a better location, possibly including version
            # the filename of this file should probably come frome the portgroup
            # one option is also to install this as part of geant4 core installation
            xinstall -m 755 -d ${destroot}${prefix}/libexec/Geant4/Geant${geant.version_simple}
            set filename ${destroot}${prefix}/libexec/Geant4/Geant${geant.version_simple}/geant4data
            system "echo #!/bin/sh  > ${filename}.sh"
            system "echo #!/bin/csh > ${filename}.csh"
            system "echo export G4DATADIR=\\\"${geant.datadir}\\\" >> ${filename}.sh"
            system "echo setenv G4DATADIR=\\\"${geant.datadir}\\\" >> ${filename}.csh"
            foreach {data.name data.version data.filename data.envvariable data.md5 data.rmd160 data.sha256} ${geant.data_versions} {
                # move data files to destination
                move ${workpath}/${data.name}${data.version} ${destroot}${geant.datadir}
                # add environmental variable to locate it
                system "echo export ${data.envvariable}=\\\"\\\$G4DATADIR/${data.name}${data.version}\\\" >> ${filename}.sh"
                system "echo setenv ${data.envvariable} \\\"\\\$G4DATADIR/${data.name}${data.version}\\\" >> ${filename}.csh"
            }
        }
        livecheck.type  none
    }

    subport ${name}.${geant.version} {
        set                 geant.version_simple 4.${geant.version}
        set                 geant.distfilename   geant${geant.version_full}${extract.suffix}
        set                 geant.datadir        ${geant.datadir_x}
        # x -> x.p01 -> x.p02 works properly, but the beta x.b01 would come after x and would need an increase in epoch
        version             ${geant.version_full}
        revision            ${geant.revision}
        distfiles           ${geant.distfilename}
        checksums           ${geant.distfilename} rmd160 ${geant.rmd160} sha256 ${geant.sha256} size ${geant.size}

        cmake.out_of_source yes
        worksrcdir          geant${version}

        # check if these are all the dependencies
        depends_lib         port:${subport}-data \
                            port:expat \
                            port:zlib
        depends_run         port:geant4_select

        select.group        geant4
        select.file         ${filespath}/${subport}

        configure.args-append -DGEANT4_USE_SYSTEM_EXPAT=ON \
                              -DGEANT4_USE_SYSTEM_CLHEP=OFF

        # - patch-upstream-source-interfaces-common-src-G4Qt.cc:
        #       http://bugzilla-geant4.kek.jp/show_bug.cgi?id=1487
        # - patch-upstream-examples-advanced-xray_fluorescence:
        #       http://bugzilla-geant4.kek.jp/show_bug.cgi?id=1501
        # - patch-cmake-Modules-Geant4InterfaceOptions.cmake:
        #       prevents linking against X11 in /usr (maybe less aggressive patch would also work)
        # - patch-cmake-Modules-Geant4BuildProjectConfig.cmake:
        #       allows placing *.cmake files to a different location than LIBDIR
        if {${geant.version} == 10.4} {
            patchfiles      patch-cmake-Modules-Geant4InterfaceOptions.cmake.4102.diff \
                            patch-cmake-Modules-G4ConfigureCMakeHelpers.cmake.4104.diff
        }
        if {${geant.version} >= 10.2 && ${geant.version} < 10.4} {
            patchfiles      patch-cmake-Modules-Geant4InterfaceOptions.cmake.4102.diff \
                            patch-cmake-Modules-Geant4BuildProjectConfig.cmake.4102.diff
        }
        if {${geant.version} >= 10.2} {
#           PortGroup       cxx11 1.0
            PortGroup       compiler_blacklist_versions 1.0
            configure.cxx_stdlib libc++
            # a bit of a guesswork (the list was not really tested)
            compiler.blacklist-append *gcc* {clang < 500} macports-clang-3.3
            compiler.fallback-append macports-clang-5.0 macports-clang-4.0
        }
        if {${geant.version} == "10.1"} {
            patchfiles      patch-cmake-Modules-Geant4InterfaceOptions.cmake.4101.diff \
                            patch-cmake-Modules-Geant4BuildProjectConfig.cmake.4101.diff
        }
        if {${geant.version} == "10.0"} {
            patchfiles      patch-cmake-Modules-Geant4InterfaceOptions.cmake.4100.diff \
                            patch-cmake-Modules-Geant4BuildProjectConfig.cmake.4100.diff
        }
        if {${geant.version} == "9.6"} {
            patchfiles      patch-upstream-qt.496.diff \
                            patch-upstream-examples-advanced-xray_fluorescence.diff \
                            patch-cmake-Modules-Geant4InterfaceOptions.cmake.496.diff \
                            patch-cmake-Modules-Geant4BuildProjectConfig.cmake.496.diff
        }

        post-patch {
             reinplace "s|@PREFIX@|${prefix}|" ${worksrcpath}/cmake/Modules/Geant4InterfaceOptions.cmake
        }
        # arguments to -DCMAKE_INSTALL_* could be written without ${prefix}
        # however the ${prefix} triggers the NON_RELOCATABLE flag which has some advantages like less cryptic path names
        configure.args-delete -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib \
                              -DCMAKE_INSTALL_RPATH=${prefix}/lib
                            # -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON
        configure.args-append -DGEANT4_INSTALL_DATA=OFF \
                              -DCMAKE_INSTALL_BINDIR=${prefix}/libexec/Geant4/Geant${geant.version_simple} \
                              -DCMAKE_INSTALL_DATAROOTDIR=${prefix}/share/Geant4 \
                              -DCMAKE_INSTALL_INCLUDEDIR=${prefix}/include/Geant4/Geant${geant.version_simple} \
                              -DCMAKE_INSTALL_LIBDIR=${prefix}/lib/Geant4/Geant${geant.version_simple} \
                              -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib/Geant4/Geant${geant.version_simple} \
                              -DCMAKE_INSTALL_RPATH=${prefix}/lib/Geant4/Geant${geant.version_simple}

        if {${geant.version} != "9.5"} {
            configure.args-append -DGEANT4_INSTALL_DATADIR=${geant.datadir} \
        }

        # this is only needed when +examples is used
        post-destroot {
            # two examples with some broken links
            foreach example {exampleP01 exampleP02 readHits} {
                if [file exists ${destroot}${prefix}/bin/${example}] {
                    delete ${destroot}${prefix}/bin/${example}
                }
            }
            # there is no option to build/install the examples elsewhere, so we move them to libexec (they have nothing to do in bin)
            if [file exists ${destroot}${prefix}/bin] {
                move ${destroot}${prefix}/bin ${destroot}${prefix}/libexec/Geant4/Geant${geant.version_simple}/examples
            }
        }
        notes-append "
NOTE: Use 'sudo port select geant4 ${subport}'
      if you need geant4-config or geant4.(c)sh in PATH.
      Otherwise source ${prefix}/libexec/Geant4/Geant${geant.version_simple}/geant4.(c)sh
"

        variant qt conflicts qt5 description {Build with Qt 4 support} {
            PortGroup qt4         1.0
            configure.args-append -DGEANT4_USE_QT=ON
        }
        # TODO: figure out which versions of Geant4 are compatible with Qt 5
        variant qt5 conflicts qt description {Build with Qt 5 support} {
            PortGroup qt5         1.0
            configure.args-append -DGEANT4_USE_QT=ON
        }

        # From installation notes:
        #
        # It is recommended that Windows and Mac users prefer the Geant4 Qt4 GUI. Note
        # also that on Mac you can only pick Qt4 OR X11/Motif interfaces. This is due
        # to incompatibilities between Apple's native OpenGL Framework and the OpenGL
        # supplied with X11 on this platform.
        #
        # (The variants opengl_x11/motif_x11 actually end up linking both against mesa's OpenGL
        # and system's OpenGL libraries which seems like a problem on its own.)

        # or simply x11? The option name in geant4-config is opengl-x11
        variant opengl_x11 description {Build with X11 visualisation drivers} {
        #   configure.args-delete -DGEANT4_USE_OPENGL_X11=OFF
            configure.args-append -DGEANT4_USE_OPENGL_X11=ON
        }
        ## This could belong to x11 (opengl_x11 & motif_x11 combined into a single option), but see also the comment above
        ## previous name (geant4 9.4): motif; name in geant4-config: motif
        variant motif_x11 description {Build with Motif (X11) user interface and visualization driver} {
            depends_lib-append    port:openmotif
        #   configure.args-delete -DGEANT4_USE_XM=OFF
            configure.args-append -DGEANT4_USE_XM=ON
        }
        ## previous name (geant4 9.4): raytracerx; name in geant4-config: raytracer-x11
        variant raytracer_x11 description {Build with Raytracer (X11) visualization driver} {
        #   configure.args-delete -DGEANT4_USE_RAYTRACER_X11=OFF
            configure.args-append -DGEANT4_USE_RAYTRACER_X11=ON
        }
        if {[variant_isset opengl_x11] || [variant_isset motif_x11]} {
            depends_lib-append    port:mesa \
                                  port:xorg-libXmu
        }
        if {[variant_isset opengl_x11] || [variant_isset motif_x11] || [variant_isset raytracer_x11]} {
            depends_lib-append    port:xorg-libice \
                                  port:xorg-libsm \
                                  port:xorg-libX11 \
                                  port:xorg-libXext
        }

        variant gdml description {Build with Geometry Description Markup Language (GDML)} {
            depends_lib-append    port:xercesc3
            # configure.args-delete -DGEANT4_USE_GDML=OFF
            configure.args-append -DGEANT4_USE_GDML=ON
            # check that XERCESC_ROOT_DIR is properly set
        }

        variant debug description {Compile with debug flags on} {
            configure.args-append -DCMAKE_BUILD_TYPE=Debug
        }

        # this option should be used with care
        variant examples description {Build and install examples (not recommended)} {
            # optional
            # depends_lib-append    port:gccxml-devel
            configure.args-append -DGEANT4_BUILD_EXAMPLES=ON \
                                  -DGEANT4_INSTALL_EXAMPLES=ON
        }

        # a temporary variant just for the sake of testing (built-in clhep should be sufficient)
        variant clhep description {Use external clhep} {
            depends_lib-append    port:clhep
            configure.args-replace \
                                  -DGEANT4_USE_SYSTEM_CLHEP=OFF -DGEANT4_USE_SYSTEM_CLHEP=ON
            configure.args-append -DGEANT4_USE_SYSTEM_EXPAT=ON \
                                  -DGEANT4_USE_SYSTEM_CLHEP=ON \
                                  -DCLHEP_CONFIG_EXECUTABLE=${prefix}/bin/clhep-config \
                                  -DCLHEP_INCLUDE_DIR=${prefix}/include \
                                  -DCLHEP_LIBRARY=${prefix}/lib/libCLHEP.dylib
        }

        if {${geant.version} >= "10.0"} {
            variant threads description {Build with multi-threading support} {
                configure.args-append -DGEANT4_BUILD_MULTITHREADED=ON
            }
        }

        default_variants-append +gdml
        if {![variant_isset qt5]} {
            default_variants-append +qt
        }

        set geant.version_full_no_patch [join [lrange [split ${geant.version_full} .] 0 2] \\.]
        # http://geant4.cern.ch/support/source/geant4.xx.xx[.pxx].tar.gz
        livecheck.url       ${geant.livecheck_url}
        livecheck.regex     geant(${geant.version_full_no_patch}(\\.\[bp\]\[0-9\]+)?)\\.tar\\.gz
    }
}

# stub port
if {$subport eq $name} {
    # default replacement for geant4 which used to provide geant4.9.4
    # other users should install geant4.10.x directly
    depends_lib   port:geant${version}

    distfiles
    patchfiles
    use_configure no
    build         {}
    destroot {
        set geant.docdir ${prefix}/share/doc/${name}
        xinstall -m 755 -d ${destroot}${geant.docdir}
        system "echo $name is a stub port > ${destroot}${geant.docdir}/README"
    }
    livecheck.type  none
}
