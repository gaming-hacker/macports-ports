# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0
PortGroup cmake     1.0
PortGroup compilers 1.0
PortGroup user 1.0

name                ecCodes
version             2.6.0
revision            1
platforms           darwin
maintainers         {takeshi @tenomoto}
license             Apache-2
categories          science
description         API and tools for decoding and encoding GRIB, BUFR and GTS formats
homepage            https://software.ecmwf.int/wiki/display/ECC
master_sites        https://software.ecmwf.int/wiki/download/attachments/45757960
distname            eccodes-${version}-Source
checksums           rmd160  033a0089d295727357b4cf15fb1859f567d41050 \
sha256  0a069ff616661e07ddfd3de60c53ae6c38738dc126476735d6b8e2b6475bf15f
long_description \
    ecCodes is a package developed by ECMWF which provides an application programming interface and \
    a set of tools for decoding and encoding messages in the following formats: \
        \n* WMO FM-92 GRIB edition 1 and edition 2 \
        \n* WMO FM-94 BUFR edition 3 and edition 4 \
        \n* WMO GTS abbreviated header (only decoding).

if [fortran_variant_isset] {
    compilers.choose    fc f77 f90
}
compilers.setup     -clang

depends_build-append \
                    bin:bison:bison \
                    bin:flex:flex \
                    port:perl5
depends_lib         port:jasper \
                    port:hdf5 \
                    port:openjpeg15 \
                    port:libpng \
                    port:netcdf \
                    port:zlib

fetch.ignore_sslcert yes
cmake.out_of_source yes

if {![fortran_variant_isset]} {
    default_variants    +gcc8 +openmp
}

configure.args-append \
                    -DENABLE_FORTRAN=OFF \
                    -DENABLE_NETCDF=ON \
                    -DENABLE_PNG=ON \
                    -DENABLE_PYTHON=OFF \
                    -DENABLE_TESTS=OFF \
                    -DJASPER_INCLUDE_DIR=${prefix}/include \
                    -DJASPER_LIBRARY_RELEASE=${prefix}/lib/libjasper.dylib \
                    -DNETCDF_CONFIG_EXECUTABLE=${prefix}/bin/nc-config \
                    -DOPENJPEG_INCLUDE_DIR=${prefix}/include/openjpeg-1.5 \
                    -DOPENJPEG_LIBRARY=${prefix}/lib/libopenjpeg.dylib \
                    -DZLIB_INCLUDE_DIR=${prefix}/include \
                    -DZLIB_LIBRARY=${prefix}/lib/libz.dylib

# Delete the following line. See #52233
# include( "/opt/local/bin/python2.7-config" OPTIONAL )
post-configure {
    if {[variant_isset python${user.ver.py}]} {
        system "ed - ${build.dir}/eccodes-config.cmake.tpls < ${filespath}/eccodes-config.cmake.tpls.ed"
    }
}

post-destroot {
    xinstall -m 0755 -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 0644 {*}[glob ${worksrcpath}/html/*.html] \
        ${destroot}${prefix}/share/doc/${name}
    if {[variant_isset python27]} {
        set sp ${destroot}${frameworks_dir}/Python.framework/Versions/${user.ver.python}/lib/python${user.ver.python}/site-packages
        xinstall -m 0755 -d ${sp}
        foreach p {gribapi eccodes} {
            xinstall -m 755 -d ${sp}/${p}
            xinstall -m 644 {*}[glob ${build.dir}/python/${p}/*.py] ${sp}/${p}
        }
        xinstall -m 0755 {*}[glob ${build.dir}/python/gribapi/*.so] ${sp}/gribapi
    }
}

if {[fortran_variant_isset]} {
    configure.args-delete   -DENABLE_FORTRAN=OFF
    configure.args-append   -DENABLE_FORTRAN=ON
}

variant python${user.ver.py} description {Add support for python${user.ver.py}} {
    depends_lib-append      port:py${user.ver.py}-numpy
    configure.args-delete   -DENABLE_PYTHON=OFF
    configure.args-append   -DENABLE_PYTHON=ON \
                            -DPYTHON_CONFIG=${prefix}/bin/python${user.ver.python}-config \
                            -DPYTHON_EXECUTABLE=${prefix}/bin/python${user.ver.python}
}

variant openmp description {Add support for OpenMP} {
    configure.args-append   -DENABLE_ECCODES_OMP_THREADS=ON
}

livecheck.type  regex
livecheck.url   ${homepage}
livecheck.regex "ecCodes version (\\d+(?:\\.\\d+)*)"
