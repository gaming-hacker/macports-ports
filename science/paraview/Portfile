# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0

PortGroup           cmake 1.0
PortGroup           qt4 1.0
PortGroup           mpi 1.0
PortGroup user 1.0
name                paraview
version             5.4.1
revision            1

categories          science graphics
platforms           darwin
license             BSD

set branch          [join [lrange [split ${version} .] 0 1] .]

maintainers         gmail.com:jjstickel dstrubbe openmaintainer

description         3D data analysis and visualization application

long_description    An open-source, multi-platform data \
    analysis and visualization application. ParaView users can quickly \
    build visualizations to analyze their data using qualitative and \
    quantitative techniques. The data exploration can be done \
    interactively in 3D or programmatically using ParaView's batch \
    processing capabilities.

homepage            http://www.paraview.org/
master_sites        ${homepage}/files/v${branch}/

distname            ParaView-v${version}

checksums           sha256  390d0f5dc66bf432e202a39b1f34193af4bf8aad2355338fa5e2778ea07a80e4 \
                    rmd160  3c37c50a0af0e49f9ac961d5a64783b8d0a529a1

#:info:build ld: file not found: @rpath/libIceTMPI.dylib for architecture x86_64
# https://github.com/OpenFOAM/ThirdParty-dev/
# http://www.paraview.org/Bug/view.php?id=16001
patchfiles          patch-ThirdParty-IceT-vtkicet-CMakeLists.txt.diff

depends_build-append    port:readline \
    port:netcdf \
    port:qt4-mac-sqlite3-plugin port:qt5-qttools

cmake.out_of_source yes

configure.pre_args-delete\
    -DCMAKE_INSTALL_PREFIX=${prefix}

configure.args-delete \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
    -DCMAKE_INSTALL_RPATH=${prefix}/lib \
    -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib

# ${destroot} needs to be part of MACOSX_APP_INSTALL_PREFIX; see further
# comments below, JJS 12/21/15
configure.args-append \
    -DBUILD_TESTING:BOOL=OFF \
    -DMACOSX_APP_INSTALL_PREFIX=${destroot}${applications_dir} \
    -DBUILD_SHARED_LIBS:BOOL=ON

pre-configure {
    configure.args-append -DCMAKE_CXX_COMPILER=${configure.cxx} \
        -DCMAKE_C_COMPILER=${configure.cc}

       if {[mpi_variant_isset]} {
           configure.args-append  \
               -DPARAVIEW_USE_MPI:BOOL=ON \
               -DMPI_C_COMPILER=${mpi.cc} \
               -DMPI_CXX_COMPILER=${mpi.cxx} \
               -DMPIEXEC=${mpi.exec} \
               -DMPI_Fortran_COMPILER=${mpi.fc}
       }
}

#    DPARAVIEW_DO_UNIX_STYLE_INSTALLS:BOOL=ON
#configure.cxxflags-append 	        -DUSE_INTERP_ERRORLINE

# Some cmake tests will fail with "error: unrecognized option '-arch'" from gcc 4.6 and earlier. Same with dragonegg based on it.
compilers.choose    fc
mpi.setup           default

destroot {
    system "cd ${build.dir} && make install"
}


# other pythons?
variant python27 description {Add Python 2.7 support.} {
    depends_lib-append  port:py27-matplotlib
    configure.args-append \
        -DPARAVIEW_ENABLE_PYTHON:BOOL=ON \
        -DPYTHON_EXECUTABLE=${prefix}/bin/python2.7 \
        -DPYTHON_INCLUDE_DIR=${prefix}/Library/Frameworks/Python.framework/Versions/2.7/Headers/ \
        -DPYTHON_LIBRARY=${prefix}/lib/libpython2.7.dylib

    notes-append\
        "\n Currently Paraview installs as an app, including the Python modules. To use with MacPorts Python, add ${applications_dir}/paraview.app/Contents/Python/:${applications_dir}/paraview.app/Contents/Libraries/ to PYTHONPATH and ${applications_dir}/paraview.app/Contents/Libraries/ to DYLD_LIBRARY_PATH. Also, simultaneous use of Mayavi may result in segfault."
}

variant ffmpeg description {Add support for FFMPEG} {
   depends_lib-append port:ffmpeg
   configure.args-append -DPARAVIEW_ENABLE_FFMPEG:BOOL=ON
}

default_variants-append    +python27 +ffmpeg

livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     ParaView (\[0-9.\]+)

test.run            yes
pre-test {
    if {![variant_isset testing]} {
        ui_error "You must build with +testing variant to be able to run the tests."
        return -code error "Build with +testing for test phase."
    }
}

variant testing description {Build executables and download data to be able to run tests.} {
    configure.args-replace  -DBUILD_TESTING:BOOL=OFF -DBUILD_TESTING:BOOL=ON
}
