# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0
PortGroup qt5 1.0
PortGroup cmake 1.0

name                phonon
version             4.10.1
license             {LGPL-2.1 LGPL-3}
maintainers         {michaelld @michaelld} openmaintainer
description         Cross Platform Multimedia API used by KDE4
platforms           darwin
homepage            http://phonon.kde.org
master_sites        kde:stable/${name}/${version}
use_xz              yes
distname            phonon-${version}
checksums           rmd160 e495a1d1ea53a6d0c6cb218b7a11175a9d507377 \
sha256 e5a98df31aeffc22493afc8d6adbca5d6f0c27cc2eed73b3be05195321e08db7 \
size   322100

variant demos description {Build the demos} {
    configure.args-append   -DPHONON_BUILD_DEMOS:BOOL=ON
}

# default_variants    +compversion440

# fix use of CMAKE_INSTALL_NAME to be an absolute path
# (RJVB: why is this necessary?)
patchfiles-append   patch-cmake_FindPhononInternal.cmake.diff

# fix MODULE names to end in .dylib instead of .so
patchfiles-append   patch-cmake_PhononMacros.cmake.diff

variant pulseaudio description "Build Phonon with additional support for PulseAudio" {
    depends_lib-append port:pulseaudio
    configure.args-append \
        -DPULSEAUDIO_INCLUDE_DIR=${prefix}/include \
        -DPULSEAUDIO_LIBRARY=${prefix}/lib/libpulse.dylib \
        -DPULSEAUDIO_MAINLOOP_LIBRARY=${prefix}/lib/libpulse-mainloop-glib.dylib \
        -DWITH_PulseAudio=ON \
        -DPHONON_PULSESUPPORT=YES
}

if {![variant_isset pulseaudio]} {
    configure.args-append \
        -DWITH_PulseAudio=OFF \
        -DPHONON_PULSESUPPORT=NO \
        -DPULSEAUDIO_INCLUDE_DIR= \
        -DPULSEAUDIO_LIBRARY= \
        -DPULSEAUDIO_MAINLOOP_LIBRARY=
}

cmake.out_of_source         yes

post-patch {
    set rel_mp_qt_cmake_dir [strsed ${qt_cmake_module_dir} "g@${prefix}/@@"]
    reinplace "s|@MACPORTS_CMAKE_DIR@|${rel_mp_qt_cmake_dir}|" \
        ${worksrcpath}/CMakeLists.txt
}

if {[info exists qt_cmake_defines]} {
    configure.args-append   \
        ${qt_cmake_defines}
}
# nb: there is no WITH_QZeitgeist option, keeping it out of nostalgia
configure.args-append   \
    -DPHONON_INSTALL_QT_EXTENSIONS_INTO_SYSTEM_QT=true \
    -DWITH_QZeitgeist=OFF

configure.ldflags-append -F${qt_frameworks_dir}

livecheck.type      regex
livecheck.url       http://mirrors.mit.edu/kde/stable/${name}/
livecheck.regex     ">(\[0-9.\]+)<"
