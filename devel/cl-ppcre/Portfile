# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem         1.0
PortGroup github 1.0

github.setup       edicl cl-ppcre d01bbf70cdf1f15ee3734fe80572276caa482e77
version 20171222
categories         devel
maintainers        pobox.com:rlonstein

description        Portable Perl-compatible regular expressions for Common Lisp

long_description   CL-PPCRE is a fast, portable, thread-safe regular expression library \
                   for Common Lisp compatible with Perl under a BSD license.

# homepage           http://weitz.de/cl-ppcre/
platforms          darwin
fetch.type          git
# master_sites       http://weitz.de/files/

# distfiles          ${name}${extract.suffix}

# checksums          md5 ac562357e1b23ee27362c196e4c03a09 \
#                    sha1 72ee5b283def4e70055a6958ac75b73049b1370f \
#                    rmd160 b47adf04cc555a4fe60e3410d41874f5ac30fe70

universal_variant  no

# variant asdf_binary_locations description {Keep compiled Lisp files organized} {
#         depends_lib port:asdf-binary-locations
# }

variant sbcl description {Compile using Steel Bank Common Lisp} {
        depends_build port:sbcl
}

extract   {}
use_configure       no
build     {}
#
set destroot-lisp "${destroot}${prefix}/share/common-lisp/"
set lisp-system-path "#p\"${prefix}/share/common-lisp/systems/\""

destroot {
          xinstall -m 0755 -d ${destroot-lisp}/src
          xinstall -m 0755 -d ${destroot-lisp}/systems
          system "cd ${destroot-lisp}/src && \
              ${extract.cmd} ${extract.pre_args} ${distpath}/${distfiles} ${extract.post_args}"
          system "find ${destroot-lisp}/src/${name}-${version} -type d -exec chmod 755 {} \\;"
          system "find ${destroot-lisp}/src/${name}-${version} -type f -exec chmod 644 {} \\;"

         foreach f [glob -dir ${destroot-lisp}/src/${name}-${version} -tails *.asd] {
             ln -sf ../src/${name}-${version}/$f ${destroot-lisp}/systems/$f
         }
}

post-destroot {
      proc asdf-load {lisp lisp-system-path destroot-system name} {
          set loadops "${lisp} --no-userinit \
                       --eval '(require \"asdf\")' \
                       --eval '(in-package :cl-user)' \
                       --eval '(setf asdf:*central-registry* (list* (quote *default-pathname-defaults*) ${lisp-system-path} ${destroot-system} asdf:*central-registry*))'"
          if {[variant_isset asdf_binary_locations]} {
              append loadops " --eval '(asdf:operate (quote asdf:load-op) (quote asdf-binary-locations))'"
          }
          append loadops " --eval '(asdf:operate (quote asdf:load-op) (quote ${name}))'"
          system "${loadops}"
     }

     if {[variant_isset sbcl]} {
         set destroot-system "#p\"${destroot-lisp}/systems/\""
         asdf-load "${prefix}/bin/sbcl" ${lisp-system-path} ${destroot-system} ${name}
     }

}
